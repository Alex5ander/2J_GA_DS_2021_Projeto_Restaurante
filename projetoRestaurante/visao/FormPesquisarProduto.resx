<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnPesquisar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAAAnAAAAJwEqCZFPAAAFMUlE
        QVRoQ9XaN4h1RRjG8TVh1kZtBC3USjsT5oAWCoIRWwvtDZ2CX61gDqWYEC1sFCPGRrEyWxkwFCqCqVDM
        z2+5s8ydPefee87dez984M/unjPhPTPvvPPOObuxAzownBxuCE+Fj8JP4d8G1z4OytwYTgnq7hbtFY4P
        N4cXw3fh79Aa3Yey6qirDW1pc+Uqht8Zvgldxo1BW9pc6YMcHnaFWYb/Eb4P3OjN8MYEv7vm3p+hqy60
        rQ997Zj2COeEV0OXm/wc3LslXB6MIgP2b3DNvSuCsuqo27anD/f0qe+ltHe4Onwd2o748EPhvDBmMapz
        btCGttr29alvNoySijeFdpR+C4+GE8M+YVlpQ1tPBG3Xfen7+jD4IYrxv4a6wc/CNeGAsNMyI9rWR90n
        G4TdQQ9h6tpY/nYQu1ctfbwT6r7ZwqaFxC9bnxevjwnr0rFBn7UNbDorzNQRQQSoKxr5dRpfpM+3Qm3L
        S6E3xApZYvA/oVTgj4u6jQ1I40dP8PvoCDKRvj8PxR62sbEzvJ4Qatf5PVhU83RIEP8fCx+GLyd8EB4P
        7ikzVtcFthS72MjWKe0Z7gqlEITKWdHGKJwdXgh1By1C4/Nh7MbEBrbUbUo72LyldvRtLCeFWboktItd
        tCgz0O4fyqozRmypNztt2dW3JCOsO7M7zvJfo9k+8G3htHDUhNMn1+qOvwpnhqFiC5tKO7DBbcoGwg3K
        DSMnPegTf+YSpfy7QfmpKZ3INffeC6X8M2HMmtBOPats2ExhrPRvQ7khjB4U+iQZKz5vdM8P83RhKDNh
        TWhjqNj0Wih2stlBavMkVWeZMsU+CZWiTSnLRRZZmMrcHko9bXTN2Dzpr7TxV2D75hGvXJSrC3t9EtuF
        SmUtWH6+qM4IJT3RRu+GNENmrj5PPBk2DxrlgmneFmMrWZwijLJ+2rAWlbJ1XW0NFdscioq9bJ9K2lyQ
        TvRpdz8A2+oBZ/vWH3D0c3rqk2m3wyorInCLRSUR+yWo+344LAwV29hY2zz1h/PrrAcYu4jbnf6RybWh
        YhsbSzuY+mPeA9CYMHpx+CGoI4xeFsZo7gPMcyGyCT0XSh3ucEHoGlEzdlH4JJTyT4dZ+8wssW2bCw1Z
        xEVSCWlBqWcmxHlh1eK0YKUM3KaMfOHhMPYB2kX8Y5i6IETNCqO1hiZzBXH8wXBwGKo2jNpPNjeDuvEr
        wyKyeEWhZ8O8dJrbGHkvvlzTz33h0DBEV4VtG9mQVKJLfQcaa0Mef2ngMkb8gVAMkArcE4bMRGcqMTSZ
        61N7pBTnXavFWCOvc30NcafeZG5oOr2suI2RLzPh5/1hnjv1ptM09ECzrLrc6d7QNxMzDzQ05ki5rFp3
        8vPusG9o1XWknIqWNiEH5VIA3lVuTdGK1LrTp+HIUIsNbKlt23aoJ09Ub05C4yKvVZaVKGbkRS6bYTsD
        7WsVNnbuVeJ614utU8OqtV8w8n7W6nqxdWvoTSCFwVdCqQAvWo8L65Y+25e83pfOPcm1r0xKxXW+H2X8
        qJe7Rf/r1+sk7oqz5QRV+CJYVKv6wHFtqH0ebBj9lcaXkTarlJzJe9bxicnIjzK+SEVT164JSGvtjrb4
        MbmTEV/pR74iIcvh5OXQ95n19SBTdNz00tXBw+mpxjXxW7qurMSs68ygDx8y9LnIeXthCV+r/tBt1MX5
        uaFyrKTHRviOsFP/amBzWsu/GtQqD2KBSWv5cEnKFoGbqKOuNtZmeJcsRgcLhjjicZV2D4Fr5d9tnKTU
        WTJZ3Nj4D6eiuf67ex5OAAAAAElFTkSuQmCC
</value>
  </data>
</root>